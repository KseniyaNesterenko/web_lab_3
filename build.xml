<project name="WebProgrammingLab" default="build" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <property file="build.properties"/>
    <available classname="org.apache.ivy.Main" property="ivy.installed"/>

    <!-- установка Ivy, если нет -->
    <target name="install-ivy" description="Install ivy" unless="ivy.installed">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar" src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.3.0/ivy-2.3.0.jar"/>
        <fail message="Ivy has been installed. Run the build again"/>
    </target>

    <!-- подгрузка недостающих модулей -->
    <target name="resolve" depends="install-ivy">
        <ivy:resolve/>
        <ivy:cachepath pathid="compile.path"/>
    </target>

    <target name="init">
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.dist}"/>
        <mkdir dir="${dir.lib}"/>
    </target>

    <!-- Цель для компиляции -->
    <target name="compile" depends="init,resolve">
        <mkdir dir="${dir.build.classes}"/>
        <javac srcdir="${dir.src}" destdir="${dir.build}" classpathref="compile.path" includeantruntime="false"/>
    </target>

    <!-- Цель для сборки jar -->
    <target name="create-jar" depends="compile">
        <jar destfile="${jar.file}" basedir="${dir.build.classes}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

    <!-- Цель для сборки war -->
    <target name="create-war">
        <war destfile="${war.file}" webxml="${webInf.dir}/web.xml">
            <fileset dir="${dir.build.classes}" includes="**/*"/>
            <lib dir="${dir.lib}"/>
        </war>
    </target>

    <target name="build" depends="create-jar, create-war"/>

    <target name="run" depends="build">
        <java jar="${jar.file}" fork="true"/>
    </target>

    <!-- Цель для очистки проекта -->
    <target name="clean">
        <delete dir="${dir.build}"/>
        <delete dir="${dir.dist}"/>
    </target>

    <!-- Цель для тестирования -->
    <target name="test" depends="build">
        <mkdir dir="${junit.output.dir}"/>
        <junit printsummary="yes" haltonfailure="yes">
            <formatter type="xml"/>
            <classpath>
                <pathelement location="${jar.file}"/>
                <pathelement location="${junit.jar}"/>
            </classpath>
            <batchtest todir="${junit.output.dir}">
                <fileset dir="${dir.test}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- Цель для преобразования файлов локализации -->
    <target name="native2ascii">
        <native2ascii src="${src.dir}/locales" dest="${build.dir}/locales" encoding="UTF-8"/>
    </target>

    <!-- Цель для валидации XML файлов -->
    <target name="xml">
        <xmlvalidate>
            <fileset dir="${src.dir}/xml">
                <include name="**/*.xml"/>
            </fileset>
        </xmlvalidate>
    </target>

</project>
